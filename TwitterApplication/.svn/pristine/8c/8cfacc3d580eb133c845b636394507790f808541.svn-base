package jp.nadai.twitterapplication;

import java.util.List;

import jp.nadai.twitterapplication.model.Mentionline;
import jp.nadai.twitterapplication.model.Timeline;
import twitter4j.Paging;
import twitter4j.ResponseList;
import twitter4j.Twitter;
import twitter4j.TwitterException;
import android.app.AlertDialog;
import android.app.ListActivity;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AbsListView;
import android.widget.AbsListView.OnScrollListener;
import android.widget.ListView;
import android.widget.Toast;

public class ReplyActivity extends ListActivity {
	int pageNum = 1;
	private Timeline mAdapter;
	private Twitter mTwitter;
	HomeActivity home = new HomeActivity();

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		// setContentView(R.layout.activity_reply);
		// boolean isLastItemVisible = totalItemCount == firstVisibleItem +
		// visibleItemCount;
		/*
		 * getListView().addFooterView(LayoutInflater.from(footerViwe);
		 * getListView().setOnScrollListener(new OnScrollListener() { public
		 * void onScroll( AbsListView view, int firstVisibleItem, int
		 * visibleItemCount, int totalItemCount) { boolean isLastItemVisible =
		 * totalItemCount == firstVisibleItem + visibleItemCount; if
		 * (isLastItemVisible && !isLoading()) { loadNewItems(); } } }
		 */

		if (!TwitterUtils.hasAccessToken(this)) {
			Intent intent = new Intent(this, TwitterOAuthActivity.class);
			startActivity(intent);
			finish();
		} else {
			mAdapter = new Timeline(this);
			setListAdapter(mAdapter);
			mTwitter = TwitterUtils.getTwitterInstance(this);
			reloadTimeLine();
		}

		final ListView listView = (ListView) findViewById(android.R.id.list);

		listView.setOnScrollListener(new OnScrollListener() {

			public void onScrollStateChanged(AbsListView view, int scrollState) {
			}

			public void onScroll(AbsListView view, int firstVisibleItem,
					int visibleItemCount, int totalItemCount) {

				int position = listView.getFirstVisiblePosition();

				if (listView.getChildAt(0) != null) {
					int y = listView.getLastVisiblePosition();
					//listView.setSelectionFromTop(position, y);
					if (y==totalItemCount-1) {
						pageNum=2;
						reloadTimeLine();
						showToast("うぼぁ");
					}
					/*
					 * if(y<-115){
					 * 
					 * showToast("下に到達したよ");
					 * 
					 * }
					 */
				}

				//

				// 最後までスクロールされたかどうかの判定
				// if (totalItemCount == firstVisibleItem + visibleItemCount) {
				// ここに次の数件を取得して書けばいい

				// }
			}
		});

		Mentionline mention = new Mentionline();

		mention.init();

	}

	protected void onListItemClick(ListView l, View v, int position, long id){
		super.onListItemClick(l, v, position, id);
		//showToast("Short Tap" + String.valueOf(position));
		 super.onListItemClick(l, v, position, id);

	        String[] dialogItem = new String[]{"リプライ", "リツイート", "お気に入り"};
	        AlertDialog.Builder dialogMenu = new AlertDialog.Builder(this);
	        dialogMenu.setItems(dialogItem, new DialogInterface.OnClickListener() {


	            public void onClick(DialogInterface dialog, int which)
	            {

	            	 switch (which)
	                 {
	     	        case 0:
	    	            //リプライ押下時の操作
	     	        	showToast("リプライの取得");
	    	            // Intent intent = new Intent(this,ReplyActivity.class);
	    		         //startActivity(intent);
	     	        	break;

	    	        case 1:
	    	            //リツイート押下時の操作
	    	        	showToast("リツイートの取得");
	    	            //Intent intent2 = new Intent(this,????.class);
	    		        //startActivity(intent);
	    	        	break;

	    	        case 2:
	    	            //お気に入り押下時の操作
	    	        	showToast("お気に入りの取得");
	    	            //Intent intent3 = new Intent(this,????.class);
	    		        //startActivity(intent);
	            	    break;
	                 }


	            }
	        }).create().show();


	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.reply, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	private void reloadTimeLine() {
		AsyncTask<Void, Void, List<twitter4j.Status>> task = new AsyncTask<Void, Void, List<twitter4j.Status>>() {
			@Override
			protected ResponseList<twitter4j.Status> doInBackground(
					Void... params) {
				try {
					Paging paging = new Paging(1, 20*pageNum);

					return mTwitter.getMentionsTimeline(paging);
				} catch (TwitterException e) {
					e.printStackTrace();
				}
				return null;
			}

			@Override
			protected void onPostExecute(List<twitter4j.Status> result) {
				if (result != null) {
					mAdapter.clear();

					for (twitter4j.Status status : result) {
						mAdapter.add(status);

					}
					getListView().setSelection(0);
				} else {
					showToast("タイムラインの取得に失敗しました…");

				}
			}
		};
		task.execute();
	}

	private void showToast(String text) {
		Toast.makeText(this, text, Toast.LENGTH_SHORT).show();
	}


}
