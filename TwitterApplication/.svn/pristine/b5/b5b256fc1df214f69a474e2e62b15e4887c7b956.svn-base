package jp.nadai.twitterapplication;

import java.util.List;

import twitter4j.DirectMessage;
import twitter4j.ResponseList;
import twitter4j.Status;
import twitter4j.Twitter;
import twitter4j.TwitterException;
import android.app.Activity;
import android.app.ListActivity;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.TextView;
import android.widget.Toast;

import com.loopj.android.image.SmartImageView;

public class DirectMessageActivity extends ListActivity {

	private TweetAdapter mAdapter;
    private Twitter mTwitter;


	 @Override
	    protected void onCreate(Bundle savedInstanceState) {
	        super.onCreate(savedInstanceState);
	        //setContentView(R.layout.activity_direct_message);

	        if (!TwitterUtils.hasAccessToken(this)) {
	            Intent intent = new Intent(this, TwitterOAuthActivity.class);
	            startActivity(intent);
	            finish();
	        } else {
	            mAdapter = new TweetAdapter(this);
	            setListAdapter(mAdapter);

	            mTwitter = TwitterUtils.getTwitterInstance(this);
	            reloadDirectMessages();
	        }
	    }

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.direct_message, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}


	private void reloadDirectMessages() {
	    AsyncTask<Void, Void, List<twitter4j.DirectMessage>> task = new AsyncTask<Void, Void, List<twitter4j.DirectMessage>>() {
	        @Override
	        protected ResponseList<DirectMessage> doInBackground(Void... params) {
	            try {
	            	ResponseList<DirectMessage> temp = mTwitter.getDirectMessages();
	                return mTwitter.getDirectMessages();
	            } catch (TwitterException e) {
	                e.printStackTrace();
	            }
	            return null;
	        }

	        @Override
	        protected void onPostExecute(List<twitter4j.DirectMessage> result) {
	            if (result != null) {
	                mAdapter.clear();
	                Log.d("dm",result.toString());
	                for (twitter4j.DirectMessage status : result) {
	                    mAdapter.add((twitter4j.Status) status);
	                }
	                getListView().setSelection(0);
	            } else {
	                showToast("DMの取得に失敗しました。。。");
	            }
	        }
	    };
	    task.execute();
	}

	private void showToast(String text) {
	    Toast.makeText(this, text, Toast.LENGTH_SHORT).show();
	}
private class TweetAdapter extends ArrayAdapter<Status> {

    private LayoutInflater mInflater;

    public TweetAdapter(Context context) {
        super(context, android.R.layout.simple_list_item_1);
        mInflater = (LayoutInflater) context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        if (convertView == null) {
            convertView = mInflater.inflate(R.layout.activity_direct_message,null);
        }
        Status item = getItem(position);
        TextView name = (TextView) convertView.findViewById(R.id.name);
        name.setText(item.getUser().getName());

        TextView screenName = (TextView) convertView.findViewById(R.id.screen_name);
        screenName.setText("@" + item.getUser().getScreenName());

        TextView text = (TextView) convertView.findViewById(R.id.text);
        text.setText(item.getText());

        SmartImageView icon = (SmartImageView) convertView.findViewById(R.id.icon);
        icon.setImageUrl(item.getUser().getProfileImageURL());
        return convertView;
    }
}
}
