package jp.nadai.twitterapplication;
import java.util.List;

import jp.nadai.twitterapplication.model.Timeline;
import twitter4j.ResponseList;
import twitter4j.Twitter;
import twitter4j.TwitterException;
import android.app.ListActivity;
import android.content.Intent;
import android.media.AudioManager;
import android.media.ToneGenerator;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.Toast;

public class HomeActivity extends ListActivity{
	 private Timeline mAdapter;
	 private Twitter mTwitter;
	@Override
	protected void onCreate(Bundle savedInstanceState) {//main
		super.onCreate(savedInstanceState);
		if (!TwitterUtils.hasAccessToken(this)) {
	        Intent intent = new Intent(this, TwitterOAuthActivity.class);
	        startActivity(intent);
	        finish();
	    } else {
	        mAdapter = new Timeline(this);
	        setListAdapter(mAdapter);
	        mTwitter = TwitterUtils.getTwitterInstance(this);
	        reloadTimeLine();
	    }
/*
		ListView listView = (ListView) findViewById(R.id.listview);

		Timeline timeline = new Timeline();
		//Toast.makeText(this, timeline.getTimelineFirst(0), Toast.LENGTH_SHORT).show();

		TextView honbun=(TextView)findViewById(R.id.text);
		honbun.setText(timeline.getTimelineFirst(0));

		TextView name=(TextView)findViewById(R.id.screen_name);
		name.setText(timeline.getTimelineSecond(0));

		TextView ID=(TextView)findViewById(R.id.name);
		ID.setText("@"+timeline.getTimelineThird(0));

		honbun.setText(timeline.getTimelineFirst(1));

		name.setText(timeline.getTimelineSecond(1));

		ID.setText("@"+timeline.getTimelineThird(1));
*/
	}


	@Override
	public boolean onCreateOptionsMenu(Menu menu) {//option
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.home, menu);
		return true;
	}
	@Override
	public boolean onOptionsItemSelected(MenuItem item) {//selectmenu
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.

		switch (item.getItemId()) {

	    case R.id.sent:
	      ToneGenerator toneGenerator
	        = new ToneGenerator(AudioManager.STREAM_SYSTEM, ToneGenerator.MAX_VOLUME);
	      toneGenerator.startTone(ToneGenerator.TONE_PROP_BEEP);
	      Toast ts = Toast.makeText(this, "送信が選択されました", Toast.LENGTH_LONG);
	      ts.show();
	      return true;


	    case R.id.home:
		  ToneGenerator toneGenerator2
		    = new ToneGenerator(AudioManager.STREAM_SYSTEM, ToneGenerator.MAX_VOLUME);
          toneGenerator2.startTone(ToneGenerator.TONE_PROP_BEEP);
	      Toast ts2 = Toast.makeText(this, "ホームが選択されました", Toast.LENGTH_LONG);
		  ts2.show();
		  return true;

	    case R.id.DM:
		  ToneGenerator toneGenerator3
		    = new ToneGenerator(AudioManager.STREAM_SYSTEM, ToneGenerator.MAX_VOLUME);
		  toneGenerator3.startTone(ToneGenerator.TONE_PROP_BEEP);
		  Toast ts3 = Toast.makeText(this, "DMが選択されました", Toast.LENGTH_LONG);
		  ts3.show();
		  return true;
	    case R.id.search:
		  ToneGenerator toneGenerator4
		    = new ToneGenerator(AudioManager.STREAM_SYSTEM, ToneGenerator.MAX_VOLUME);
		  toneGenerator4.startTone(ToneGenerator.TONE_PROP_BEEP);
		  Toast ts4 = Toast.makeText(this, "検索が選択されました", Toast.LENGTH_LONG);
		  ts4.show();
		  return true;
		}
	    return false;
	  }
	/*
	  @Override
      public void onCreateContextMenu(ContextMenu menu, View v,ContextMenuInfo menuInfo) {
      super.onCreateContextMenu(menu, v, menuInfo);
      switch(v.getId()){
        case R.id.listView1:
           AdapterView.AdapterContextMenuInfo info =
             (AdapterView.AdapterContextMenuInfo) menuInfo;
           String[] a = getBaseContext().getResources().getStringArray(R.array.planets_array);
           String s = a[info.position];
           menu.setHeaderTitle(s);
           getMenuInflater().inflate(
           R.menu.listview1_context, menu);
       break;
      }
     }
	 @Override
	 public boolean onContextItemSelected(MenuItem item) {
	    switch(item.getItemId()){

	    case R.id.reply://リプライ
	        return true;
	    case R.id.retweet://リツイート
	      return true;
	    case R.id.favorite://お気に入り
	      return true;
	    }
	    return false;
	  }
	}
	*/
	private void reloadTimeLine() {
	    AsyncTask<Void, Void, List<twitter4j.Status>> task = new AsyncTask<Void, Void, List<twitter4j.Status>>() {
	        @Override
	        protected ResponseList<twitter4j.Status> doInBackground(Void... params) {
	            try {
	                return mTwitter.getHomeTimeline();
	            } catch (TwitterException e) {
	                e.printStackTrace();
	            }
	            return null;
	        }
	        @Override
	        protected void onPostExecute(List<twitter4j.Status> result) {
	            if (result != null) {
	                mAdapter.clear();
	                for (twitter4j.Status status : result) {
	                    mAdapter.add(status);
	                }
	                getListView().setSelection(0);
	            } else {
	                showToast("タイムラインの取得に失敗しました…");
	            }
	        }
	    };
	    task.execute();
	}
	private void showToast(String text) {
	    Toast.makeText(this, text, Toast.LENGTH_SHORT).show();
	}

}
